

name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

# These are needed because secrets can not be used in 'if' expressions
# env:
#   PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
#   TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
#   RTD_WEBHOOK_URL: ${{ secrets.RTD_WEBHOOK_URL }}
#   RTD_WEBHOOK_TOKEN: ${{ secrets.RTD_WEBHOOK_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Check-out repo
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsuitesparse-dev

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v3
        with: 
          activate-environment: tkimpson_2025a
          environment-file: conda_env.yml

      - name: Verify Environment
        shell: bash -l {0}
        run: |
          conda info
          conda list
          which python

      - name: Install pipx
        shell: bash -l {0}
        run: |
          python -m pip install pipx 
          python -m pipx ensurepath

      - name: Install poetry
        shell: bash -l {0}
        run: |
          pipx install poetry==2.1.1
          poetry --version

      - name: Set project version
        shell: bash -l {0}
        run: poetry version $(git describe --tags --abbrev=0)

      - name: Install the project
        shell: bash -l {0}
        run: |
          poetry env info
          poetry install --no-interaction

      - name: Enforce linting
        shell: bash -l {0}
        run: poetry run ruff check --config ruff.toml .

      - name: Enforce formating
        shell: bash -l {0}
        run: poetry run black .

      - name: Enforce maintainance of Poetry project
        shell: bash -l {0}
        run: |
          poetry check

      # run test
      - name: Generate build
        shell: bash -l {0}
        run: poetry build

      - name: Code tests
        shell: bash -l {0}
        run: poetry run pytest

      - name: Documentation build test
        shell: bash -l {0}
        run: poetry run make docs


  #   steps:

  #     # Report on which services are configured
  #     - name: Read the Docs URL
  #       if: "!(env.RTD_WEBHOOK_URL)"
  #       run: echo "::warning title=RTD_WEBHOOK_URL not set::Read the Docs functionality not enabled.  Add RTD_WEBHOOK_URL to your repo secrets if you want it enabled."
  #     - name: Read the Docs Token
  #       if: "!(env.RTD_WEBHOOK_TOKEN)"
  #       run: echo "::warning title=RTD_WEBHOOK_TOKEN not set::Read the Docs functionality not enabled.  Add RTD_WEBHOOK_TOKEN to your repo secrets if you want it enabled."
  #     - name: test.PyPI Token
  #       if: "!(env.TEST_PYPI_TOKEN)"
  #       run: echo "::warning title=TEST_PYPI_TOKEN not Set::PyPI functionality not enabled.  Add PYPI_TOKEN to your repo secrets if you want it enabled."
  #     - name: test.PyPI Token
  #       if: "!(env.TEST_PYPI_TOKEN)"
  #       run: echo "::warning title=TEST_PYPI_TOKEN not Set::test.PyPI functionality not enabled.  Add TEST_PYPI_TOKEN to your repo secrets if you want it enabled."

